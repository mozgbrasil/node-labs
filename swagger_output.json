{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "X-API-KEY",
      "description": "any description..."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/login": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/logout": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/forgot": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/reset/{token}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/signup": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/contact": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/account": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/account/profile": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/account/password": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/account/delete": {
      "post": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/account/unlink/{provider}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/api/facebook": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/facebook": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/auth/facebook/callback": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/.*fly$/": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/airbnb": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/stit_scope": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/products/{organizationName}": {
      "get": {
        "tags": [],
        "description": "",
        "parameters": [
          {
            "name": "organizationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter todos registros.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Current page showing",
            "example": "3",
            "type": "int"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Total items showing in per page",
            "example": "50",
            "type": "int"
          }
        ],
        "responses": {}
      },
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para criar registro.",
        "parameters": [
          {
            "name": "newBody",
            "in": "body",
            "description": "Informações do usuário.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/FindupUsers"
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/{_id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter o registro.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User"
            },
            "description": "Usuário encontrado."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para atualizar registro.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "newBody",
            "in": "body",
            "description": "Informações do usuário.",
            "required": true,
            "type": "object",
            "schema": {
              "$ref": "#/definitions/FindupUsers"
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para excluir o registro.",
        "parameters": [
          {
            "name": "_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "Parents": {
      "type": "object",
      "properties": {
        "father": {
          "type": "string",
          "example": "Simon Doe"
        },
        "mother": {
          "type": "string",
          "example": "Marie Doe"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "$ref": "#/definitions/Parents"
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "AddUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "about": {
          "type": "string",
          "example": ""
        }
      },
      "required": [
        "name",
        "age"
      ]
    },
    "FindupUsers": {
      "type": "object",
      "properties": {
        "location": {
          "type": "object",
          "properties": {
            "street": {
              "type": "object",
              "properties": {
                "number": {
                  "type": "number",
                  "example": 4291
                },
                "name": {
                  "type": "string",
                  "example": "Rua Santa Luzia "
                }
              }
            },
            "coordinates": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "string",
                  "example": "-40.7384"
                },
                "longitude": {
                  "type": "string",
                  "example": "146.0172"
                }
              }
            },
            "timezone": {
              "type": "object",
              "properties": {
                "offset": {
                  "type": "string",
                  "example": "-5:00"
                },
                "description": {
                  "type": "string",
                  "example": "Eastern Time (US & Canada), Bogota, Lima"
                }
              }
            },
            "city": {
              "type": "string",
              "example": "Campo Largo"
            },
            "state": {
              "type": "string",
              "example": "Bahia"
            },
            "postcode": {
              "type": "string",
              "example": "11280"
            }
          }
        },
        "gender": {
          "type": "string",
          "example": "female"
        },
        "name": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "example": "Miss"
            },
            "first": {
              "type": "string",
              "example": "Ariovanda"
            },
            "last": {
              "type": "string",
              "example": "Aragão"
            }
          }
        },
        "email": {
          "type": "string",
          "example": "ariovanda.aragao@example.com"
        },
        "login": {
          "type": "object",
          "properties": {
            "uuid": {
              "type": "string",
              "example": "b0d3e756-3c96-4c7c-97a0-bbdf4fc10568"
            },
            "username": {
              "type": "string",
              "example": "bluetiger236"
            },
            "password": {
              "type": "string",
              "example": "456456"
            },
            "salt": {
              "type": "string",
              "example": "xIm6fd1h"
            },
            "md5": {
              "type": "string",
              "example": "cb9a9fcb4e8ced83700551abdbf7e7c5"
            },
            "sha1": {
              "type": "string",
              "example": "a5864c30600b26d2bc5d9f603034ea42669d73da"
            },
            "sha256": {
              "type": "string",
              "example": "2b6761cdca64445c15d7b352ec30ba90eb75cca12db435cfb04f27be75b67bf9"
            }
          }
        },
        "dob": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "example": "1951-01-02T15:29:29.688Z"
            },
            "age": {
              "type": "number",
              "example": 69
            }
          }
        },
        "registered": {
          "type": "object",
          "properties": {
            "date": {
              "type": "string",
              "example": "2005-05-24T13:07:22.372Z"
            },
            "age": {
              "type": "number",
              "example": 15
            }
          }
        },
        "phone": {
          "type": "string",
          "example": "(53) 1924-4957"
        },
        "cell": {
          "type": "string",
          "example": "(90) 6530-2213"
        },
        "picture": {
          "type": "object",
          "properties": {
            "large": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/women/26.jpg"
            },
            "medium": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/med/women/26.jpg"
            },
            "thumbnail": {
              "type": "string",
              "example": "https://randomuser.me/api/portraits/thumb/women/26.jpg"
            }
          }
        },
        "nat": {
          "type": "string",
          "example": "BR"
        }
      }
    }
  }
}